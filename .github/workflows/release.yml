name: Release
on:
  push:
    branches:
      - master
      - next
jobs:
  # @see https://medium.com/attest-engineering/adding-a-unique-github-build-identifier-7aa2e83cadca
  build_id:
    name: Build Id
    runs-on: ubuntu-latest
    steps:
      - name: Create build id
        id: build_id
        run: echo "::set-output name=id::$(date +%s)"
      - name: Cache build id
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.build-id
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}-${{ steps.build_id.outputs.id }}
      - name: Store build id
        run: |
          mkdir -p .build-id 
          echo $BUILD_ID > .build-id/id
        env:
          BUILD_ID: ${{ steps.build_id.outputs.id }}
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14
      - name: Cache dependencies
        id: deps
        uses: actions/cache@v2
        with:
          path: packages/core/node_modules
          key: deps-${{ hashFiles('packages/core/package-lock.json') }}
      - name: Cache cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: cypress-${{ hashFiles('packages/core/package-lock.json') }}
      - name: Install dependencies
        if: steps.deps.outputs.cache-hit != 'true'
        run: npm install --prefix packages/core
  build:
    name: Build
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14
      - name: Restore dependencies
        uses: actions/cache@v2
        with:
          path: packages/core/node_modules
          key: deps-${{ hashFiles('packages/core/package-lock.json') }}
      - name: Restore cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: cypress-${{ hashFiles('packages/core/package-lock.json') }}
      - name: Cache dist
        uses: actions/cache@v2
        with:
          path: packages/core/dist
          key: dist-${{ github.run_id }}
      - name: Build 
        run: npm run build --prefix packages/core
      - name: Instrument
        run: npm run instrument --prefix packages/core
  test_unit:
    name: Unit Tests
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14
      - name: Restore dependencies
        uses: actions/cache@v2
        with:
          path: packages/core/node_modules
          key: deps-${{ hashFiles('packages/core/package-lock.json') }}
      - name: Restore cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: cypress-${{ hashFiles('packages/core/package-lock.json') }}
      - name: Run unit tests
        run: npm run test:unit.coverage --prefix packages/core
      - name: Upload report to codecov
        run: npx codecov -f packages/core/jest-coverage/coverage.json
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  test_e2e:
    name: E2E Tests
    needs: [build_id, build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2, 3, 4, 5]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14
      - name: Restore build id from cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.build-id
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}
      - name: Set build id
        id: build_id
        run: echo "::set-output name=id::$(cat .build-id/id)"
      - name: Restore dependencies
        uses: actions/cache@v2
        with:
          path: packages/core/node_modules
          key: deps-${{ hashFiles('packages/core/package-lock.json') }}
      - name: Restore cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: cypress-${{ hashFiles('packages/core/package-lock.json') }}
      - name: Restore dist
        uses: actions/cache@v2
        with:
          path: packages/core/dist
          key: dist-${{ github.run_id }}
      - name: Run e2e tests
        run:  npm run test:e2e.ci --prefix packages/core
        env:
          BUILD_ID: '${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}'
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload report to codecov
        run: npx codecov -f packages/core/cypress-coverage/coverage.json
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  release:
    name: Release
    needs: [test_unit, test_e2e]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14
      - name: Cache pnpm store
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: deps-${{ hashFiles('packages/core/package-lock.json') }}
      - name: Restore cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: cypress-${{ hashFiles('packages/core/package-lock.json') }}
      - name: Install pnpm
        run: curl -L https://raw.githubusercontent.com/pnpm/self-installer/master/install.js | node
      - name: Install dependencies
        run: pnpm install --filter vime --filter ./packages
      - name: Build packages
        run: pnpm run build --filter vime
      - name: Release packages
        run: pnpm run release --filter vime
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}